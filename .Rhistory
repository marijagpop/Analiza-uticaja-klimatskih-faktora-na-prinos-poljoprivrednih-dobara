summary(podaci$Total_Precipitation_mm)
install.packages("Hmisc")
library(Hmisc)
uninstall.packages("Hmisc")
describe(podaci$Year)
library(psych)
summary(podaci$Year)
describe(podaci$Year)
summary(podaci$Year)
describe(podaci$Year)
podaci<-read.csv("agriculture.csv", stringsAsFactors = FALSE)
podaci
str(podaci)
install.packages("Hmisc")
library(Hmisc)
summary(podaci$Year)
describe(podaci$Year)
var(podaci$Year)
sd(podaci$Year)
summary(podaci$Year)
var(podaci$Year)
sd(podaci$Year)
describe(podaci$Year)
shapiro.test(podaci$Year)
shapiro.test(podaci$Average_Temperature_C)
ks.test(podaci$Year)
ks.test(podaci$Year, "pnorm")
summary(podaci$Average_Temperature_C)
var(podaci$Average_Temperature_C)
sd(podaci$Average_Temperature_C)
describe(podaci$Average_Temperature_C)
ks.test(podaci$Average_Temperature_C, "pnorm")
ks.test(podaci$Average_Temperature_C, "pnorm", sd=sd(podaci$Average_Temperature_C))
ks.test(podaci$Average_Temperature_C, "pnorm", mean= mean(podaci$Average_Temperature_C) sd=sd(podaci$Average_Temperature_C))
ks.test(podaci$Average_Temperature_C, "pnorm", mean= mean(podaci$Average_Temperature_C), sd=sd(podaci$Average_Temperature_C))
summary(podaci$Average_Temperature_C)
var(podaci$Average_Temperature_C)
sd(podaci$Average_Temperature_C)
describe(podaci$Average_Temperature_C)
ks.test(podaci$Average_Temperature_C, "pnorm", mean= mean(podaci$Average_Temperature_C), sd=sd(podaci$Average_Temperature_C))
hist(podaci$Average_Temperature_C)
summary(podaci$Total_Precipitation_mm)
var(podaci$Total_Precipitation_mm)
sd(podaci$Total_Precipitation_mm)
describe(podaci$Total_Precipitation_mm)
ks.test(podaci$Total_Precipitation_mm, "pnorm", mean= mean(podaci$Total_Precipitation_mm), sd=sd(podaci$Total_Precipitation_mm))
hist(podaci$Total_Precipitation_mm)
summary(podaci$CO2_Emissions_MT)
var(podaci$CO2_Emissions_MT)
sd(podaci$CO2_Emissions_MT)
describe(podaci$CO2_Emissions_MT)
ks.test(podaci$CO2_Emissions_MT, "pnorm", mean= mean(podaci$CO2_Emissions_MT), sd=sd(podaci$CO2_Emissions_MT))
hist(podaci$CO2_Emissions_MT)
summary(podaci$Crop_Yield_MT_per_HA)
var(podaci$Crop_Yield_MT_per_HA)
sd(podaci$Crop_Yield_MT_per_HA)
describe(podaci$Crop_Yield_MT_per_HA)
ks.test(podaci$Crop_Yield_MT_per_HA, "pnorm", mean= mean(podaci$Crop_Yield_MT_per_HA), sd=sd(podaci$Crop_Yield_MT_per_HA))
hist(podaci$Crop_Yield_MT_per_HA)
summary(podaci$Extreme_Weather_Events)
var(podaci$Extreme_Weather_Events)
sd(podaci$Extreme_Weather_Events)
describe(podaci$Extreme_Weather_Events)
ks.test(podaci$Extreme_Weather_Events, "pnorm", mean= mean(podaci$Extreme_Weather_Events), sd=sd(podaci$Extreme_Weather_Events))
hist(podaci$Extreme_Weather_Events)
summary(podaci$Irrigation_Access_.)
var(podaci$Irrigation_Access_.)
sd(podaci$Irrigation_Access_.)
describe(podaci$Irrigation_Access_.)
ks.test(podaci$Irrigation_Access_., "pnorm", mean= mean(podaci$Irrigation_Access_.), sd=sd(podaci$Irrigation_Access_.))
hist(podaci$Irrigation_Access_.)
summary(podaci$Pesticide_Use_KG_per_HA)
var(podaci$Pesticide_Use_KG_per_HA)
sd(podaci$Pesticide_Use_KG_per_HA)
describe(podaci$Pesticide_Use_KG_per_HA)
ks.test(podaci$Pesticide_Use_KG_per_HA, "pnorm", mean= mean(podaci$Pesticide_Use_KG_per_HA), sd=sd(podaci$Pesticide_Use_KG_per_HA))
hist(podaci$Pesticide_Use_KG_per_HA)
summary(podaci$Fertilizer_Use_KG_per_HA)
var(podaci$Fertilizer_Use_KG_per_HA)
sd(podaci$Fertilizer_Use_KG_per_HA)
describe(podaci$Fertilizer_Use_KG_per_HA)
ks.test(podaci$Fertilizer_Use_KG_per_HA, "pnorm", mean= mean(podaci$Fertilizer_Use_KG_per_HA), sd=sd(podaci$Fertilizer_Use_KG_per_HA))
hist(podaci$Fertilizer_Use_KG_per_HA)
summary(podaci$Soil_Health_Index)
var(podaci$Soil_Health_Index)
sd(podaci$Soil_Health_Index)
describe(podaci$Soil_Health_Index)
ks.test(podaci$Soil_Health_Index, "pnorm", mean= mean(podaci$Soil_Health_Index), sd=sd(podaci$Soil_Health_Index))
hist(podaci$Soil_Health_Index)
summary(podaci$Economic_Impact_Million_USD)
var(podaci$Economic_Impact_Million_USD)
sd(podaci$Economic_Impact_Million_USD)
describe(podaci$Economic_Impact_Million_USD)
ks.test(podaci$Economic_Impact_Million_USD, "pnorm", mean= mean(podaci$Economic_Impact_Million_USD), sd=sd(podaci$Economic_Impact_Million_USD))
hist(podaci$Economic_Impact_Million_USD)
data<-read.csv("agriculture.csv", stringsAsFactors = FALSE)
data24<-subset(data, Year==2024)
data14<-subset(data, Year==2014)
#izbacujem char varijabale
str(data24)
data24$Year<-NULL
data24$Crop_Type<-NULL
data24$Country<-NULL
data24$Region<-NULL
data24$Adaptation_Strategies<-NULL
str(data14)
data14$Year<-NULL
data14$Crop_Type<-NULL
data14$Country<-NULL
data14$Region<-NULL
data14$Adaptation_Strategies<-NULL
#AVERAGE_TEMPERATURE
length(data24$Average_Temperature_C)
length(data14$Average_Temperature_C)
test_temp<-t.test(data14$Average_Temperature_C, data24$Average_Temperature_C, paired = TRUE)
test_temp
test_prec<-t.test(data14$Total_Precipitation_mm, data24$Total_Precipitation_mm, paired = TRUE)
test_prec
test_co2<-t.test(data14$CO2_Emissions_MT, data24$CO2_Emissions_MT, paired = TRUE)
test_co2
test_crop<-t.test(data14$Crop_Yield_MT_per_HA, data24$Crop_Yield_MT_per_HA, paired = TRUE)
test_crop
test_extr<-t.test(data14$Crop_Yield_MT_per_HA, data24$Crop_Yield_MT_per_HA, paired = TRUE)
test_extr
test_irrigation<-t.test(data14$Irrigation_Access_., data24$Irrigation_Access_., paired = TRUE)
test_irrigation
test_pesticide<-t.test(data14$Pesticide_Use_KG_per_HA, data24$Pesticide_Use_KG_per_HA, paired = TRUE)
test_pesticide
test_fertilizer<-t.test(data14$Fertilizer_Use_KG_per_HA, data24$Fertilizer_Use_KG_per_HA, paired = TRUE)
test_fertilizer
test_soil<-t.test(data14$Soil_Health_Index, data24$Soil_Health_Index, paired = TRUE)
test_soil
test_economic<-t.test(data14$Economic_Impact_Million_USD, data24$Economic_Impact_Million_USD, paired = TRUE)
test_economic
podaci<-read.csv("agriculture.csv", stringsAsFactors = FALSE)
podaci
str(podaci)
#iz bovog data seta izbacujem nenumericke varijable
noviPodaci<-podaci
noviPodaci$Country<-NULL
noviPodaci$Region<-NULL
noviPodaci$Adaptation_Strategies<-NULL
noviPodaci$Crop_Type<-NULL
noviPodaci$Extreme_Weather_Events<-NULL
str(noviPodaci)
summary(noviPodaci$Year)
table(noviPodaci$Year)
apply(podaci24,2, function(x) sum(is.na(x)))
library(corrplot)
matrica24<-cor(podaci24)
corrplot(matrica24, method = "number", type = "upper", diag = FALSE)
podaci24<- subset(noviPodaci, Year==2024)
str(podaci24)
podaci24$Year<-NULL
apply(podaci24,2, function(x) sum(is.na(x)))
#nema nedostajucih vrednosti
library(corrplot)
matrica24<-cor(podaci24)
corrplot(matrica24, method = "number", type = "upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci24$Soil_Health_Index<-NULL
podaci24$Irrigation_Access_.<-NULL
library(caret)
index<-createDataPartition(podaci24$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
trening<-podaci24[index,]
test<-podaci24[-index,]
lm24<-lm(Crop_Yield_MT_per_HA~., data = trening)
summary(lm24)
library(car)
vif(lm24)
lm24.predict<-predict(lm24, test)
rss24<-sum((lm24.predict-test$Crop_Yield_MT_per_HA)^2)
rmse24<-sqrt(rss24/nrow(test))
rmse24
#koren srednje kvadratne greske
#vrednost 0.7684615 je ocekivana greska modela
rmse24/mean(test$Crop_Yield_MT_per_HA)
plot(lm24)
podaci14<-subset(noviPodaci, Year==2014)
str(podaci14)
podaci14$Year<-NULL
apply(podaci14,2, function(x) sum(is.na(x)))
#nema NA vrednosti
matrica14<-cor(podaci14)
corrplot(matrica14, method = "number", type="upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci14$Soil_Health_Index<-NULL
podaci14$Irrigation_Access_.<-NULL
library(caret)
ind<-createDataPartition(podaci14$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
train_set<-podaci14[ind,]
test_set<-podaci14[-ind,]
lm14<-lm(Crop_Yield_MT_per_HA~., train_set)
summary(lm14)
podaci14<-subset(noviPodaci, Year==2014)
str(podaci14)
podaci14$Year<-NULL
apply(podaci14,2, function(x) sum(is.na(x)))
#nema NA vrednosti
matrica14<-cor(podaci14)
corrplot(matrica14, method = "number", type="upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci14$Soil_Health_Index<-NULL
podaci14$Irrigation_Access_.<-NULL
library(caret)
ind<-createDataPartition(podaci14$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
train_set<-podaci14[ind,]
test_set<-podaci14[-ind,]
lm14<-lm(Crop_Yield_MT_per_HA~., train_set)
summary(lm14)
podaci<-read.csv("agriculture.csv", stringsAsFactors = FALSE)
podaci
str(podaci)
#iz bovog data seta izbacujem nenumericke varijable
noviPodaci<-podaci
noviPodaci$Country<-NULL
noviPodaci$Region<-NULL
noviPodaci$Adaptation_Strategies<-NULL
noviPodaci$Crop_Type<-NULL
noviPodaci$Extreme_Weather_Events<-NULL
str(noviPodaci)
summary(noviPodaci$Year)
table(noviPodaci$Year)
#najstarija godina za koju imamo podatke je 1990, a najnovija 2024, tako da cu porediti modele za ove dve godine
#_________________________________________________________________________________________________________________
#Linearni model 2024
podaci24<- subset(noviPodaci, Year==2024)
str(podaci24)
podaci24$Year<-NULL
apply(podaci24,2, function(x) sum(is.na(x)))
#nema nedostajucih vrednosti
library(corrplot)
matrica24<-cor(podaci24)
corrplot(matrica24, method = "number", type = "upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci24$Soil_Health_Index<-NULL
podaci24$Irrigation_Access_.<-NULL
library(caret)
set.seed(1010)
index<-createDataPartition(podaci24$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
trening<-podaci24[index,]
test<-podaci24[-index,]
lm24<-lm(Crop_Yield_MT_per_HA~., data = trening)
summary(lm24)
#Medijana reziduala je -0.1194
#najmanja vrednost je -1.0143, a najveca 2.1528
#Statisticki znacajne varijable koje uticu na prinos su Economic_Impact_Million_USD(***) i Average_Temperature_C(*)
#Podeseni koeficijent determinacije je 0.5668, sto znaci da je 56.68% varijabiliteta zavisne varijable objasnjeno nezavisnim
library(car)
vif(lm24)
#Vrednosti multikolinearnosti za sve varijable su manji od 1.1 pa ih necu izbacivati
lm24.predict<-predict(lm24, test)
rss24<-sum((lm24.predict-test$Crop_Yield_MT_per_HA)^2)
rmse24<-sqrt(rss24/nrow(test))
rmse24
#koren srednje kvadratne greske
#vrednost 0.7684615 je ocekivana greska modela
rmse24/mean(test$Crop_Yield_MT_per_HA)
#Kada podelimo ovu vrednost sa srednjom vrednosti zavisne promenjive iz skupa test podataka dobijamo 0.3559487, sto znaci da je
#ocekivana greska modela 35.56%
plot(lm24)
#Linearni model 2014
podaci14<-subset(noviPodaci, Year==2014)
str(podaci14)
podaci14$Year<-NULL
apply(podaci14,2, function(x) sum(is.na(x)))
#nema NA vrednosti
matrica14<-cor(podaci14)
corrplot(matrica14, method = "number", type="upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci14$Soil_Health_Index<-NULL
podaci14$Irrigation_Access_.<-NULL
library(caret)
ind<-createDataPartition(podaci14$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
train_set<-podaci14[ind,]
test_set<-podaci14[-ind,]
lm14<-lm(Crop_Yield_MT_per_HA~., train_set)
summary(lm14)
plot(lm24)
matrica14<-cor(podaci14)
corrplot(matrica14, method = "number", type="upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci14$Soil_Health_Index<-NULL
podaci14$Irrigation_Access_.<-NULL
library(caret)
ind<-createDataPartition(podaci14$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
train_set<-podaci14[ind,]
test_set<-podaci14[-ind,]
lm14<-lm(Crop_Yield_MT_per_HA~., train_set)
summary(lm14)
vif(lm14)
lm14.predict<-predict(lm14, test_set)
rss14<-sum((lm14.predict-test_set$Crop_Yield_MT_per_HA)^2)
rmse14<-sqrt(rss14/nrow(test_set))
rmse14
#koren srednje kvadratne greske
#vrednost 0.684991 je ocekivana greska modela
rmse14/mean(test_set$Crop_Yield_MT_per_HA)
podaci24<- subset(noviPodaci, Year==2024)
str(podaci24)
podaci24$Year<-NULL
apply(podaci24,2, function(x) sum(is.na(x)))
#nema nedostajucih vrednosti
library(corrplot)
matrica24<-cor(podaci24)
corrplot(matrica24, method = "number", type = "upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci24$Soil_Health_Index<-NULL
podaci24$Irrigation_Access_.<-NULL
library(caret)
set.seed(1010)
index<-createDataPartition(podaci24$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
trening<-podaci24[index,]
test<-podaci24[-index,]
lm24<-lm(Crop_Yield_MT_per_HA~., data = trening)
summary(lm24)
#Medijana reziduala je -0.1194
#najmanja vrednost je -1.0143, a najveca 2.1528
#Statisticki znacajne varijable koje uticu na prinos su Economic_Impact_Million_USD(***) i Average_Temperature_C(*)
#Podeseni koeficijent determinacije je 0.5668, sto znaci da je 56.68% varijabiliteta zavisne varijable objasnjeno nezavisnim
library(car)
vif(lm24)
#Vrednosti multikolinearnosti za sve varijable su manji od 1.1 pa ih necu izbacivati
lm24.predict<-predict(lm24, test)
rss24<-sum((lm24.predict-test$Crop_Yield_MT_per_HA)^2)
rmse24<-sqrt(rss24/nrow(test))
rmse24
#koren srednje kvadratne greske
#vrednost 0.7684615 je ocekivana greska modela
rmse24/mean(test$Crop_Yield_MT_per_HA)
#Kada podelimo ovu vrednost sa srednjom vrednosti zavisne promenjive iz skupa test podataka dobijamo 0.3559487, sto znaci da je
#ocekivana greska modela 35.56%
plot(lm24)
#Linearni model 2014
podaci14<-subset(noviPodaci, Year==2014)
str(podaci14)
podaci14$Year<-NULL
apply(podaci14,2, function(x) sum(is.na(x)))
#nema NA vrednosti
matrica14<-cor(podaci14)
corrplot(matrica14, method = "number", type="upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci14$Soil_Health_Index<-NULL
podaci14$Irrigation_Access_.<-NULL
library(caret)
ind<-createDataPartition(podaci14$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
train_set<-podaci14[ind,]
test_set<-podaci14[-ind,]
lm14<-lm(Crop_Yield_MT_per_HA~., train_set)
summary(lm14)
#najmanja vrednost reziduala je -1.0846, a najveca 2.0904
#Statisticki znacajne varijable koje uticu na prinos su Economic_Impact_Million_USD(***) i Average_Temperature_C(*)
#Podeseni koeficijent determinacije je 0.5496, sto znaci da je 54.96% varijabiliteta zavisne varijable objasnjeno nezavisnim
vif(lm14)
#Vresnosti multikolinearnosti za sve varijable su manji od 1.1 pa necu nista izbacivati
lm14.predict<-predict(lm14, test_set)
rss14<-sum((lm14.predict-test_set$Crop_Yield_MT_per_HA)^2)
rmse14<-sqrt(rss14/nrow(test_set))
rmse14
#koren srednje kvadratne greske
#vrednost 0.684991 je ocekivana greska modela
rmse14/mean(test_set$Crop_Yield_MT_per_HA)
podaci24<- subset(noviPodaci, Year==2024)
str(podaci24)
podaci24$Year<-NULL
apply(podaci24,2, function(x) sum(is.na(x)))
#nema nedostajucih vrednosti
library(corrplot)
matrica24<-cor(podaci24)
corrplot(matrica24, method = "number", type = "upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci24$Soil_Health_Index<-NULL
podaci24$Irrigation_Access_.<-NULL
library(caret)
set.seed(1010)
index<-createDataPartition(podaci24$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
trening<-podaci24[index,]
test<-podaci24[-index,]
lm24<-lm(Crop_Yield_MT_per_HA~., data = trening)
summary(lm24)
#Medijana reziduala je -0.1194
#najmanja vrednost je -1.0143, a najveca 2.1528
#Statisticki znacajne varijable koje uticu na prinos su Economic_Impact_Million_USD(***) i Average_Temperature_C(*)
#Podeseni koeficijent determinacije je 0.5668, sto znaci da je 56.68% varijabiliteta zavisne varijable objasnjeno nezavisnim
library(car)
vif(lm24)
#Vrednosti multikolinearnosti za sve varijable su manji od 1.1 pa ih necu izbacivati
lm24.predict<-predict(lm24, test)
rss24<-sum((lm24.predict-test$Crop_Yield_MT_per_HA)^2)
rmse24<-sqrt(rss24/nrow(test))
rmse24
#koren srednje kvadratne greske
#vrednost 0.7684615 je ocekivana greska modela
rmse24/mean(test$Crop_Yield_MT_per_HA)
#Kada podelimo ovu vrednost sa srednjom vrednosti zavisne promenjive iz skupa test podataka dobijamo 0.3559487, sto znaci da je
#ocekivana greska modela 35.56%
plot(lm24)
#Linearni model 2014
podaci14<-subset(noviPodaci, Year==2014)
str(podaci14)
podaci14$Year<-NULL
apply(podaci14,2, function(x) sum(is.na(x)))
#nema NA vrednosti
matrica14<-cor(podaci14)
corrplot(matrica14, method = "number", type="upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci14$Soil_Health_Index<-NULL
podaci14$Irrigation_Access_.<-NULL
library(caret)
ind<-createDataPartition(podaci14$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
train_set<-podaci14[ind,]
test_set<-podaci14[-ind,]
lm14<-lm(Crop_Yield_MT_per_HA~., train_set)
summary(lm14)
#najmanja vrednost reziduala je -1.0846, a najveca 2.0904
#Statisticki znacajne varijable koje uticu na prinos su Economic_Impact_Million_USD(***) i Average_Temperature_C(*)
#Podeseni koeficijent determinacije je 0.5496, sto znaci da je 54.96% varijabiliteta zavisne varijable objasnjeno nezavisnim
vif(lm14)
#Vresnosti multikolinearnosti za sve varijable su manji od 1.1 pa necu nista izbacivati
lm14.predict<-predict(lm14, test_set)
rss14<-sum((lm14.predict-test_set$Crop_Yield_MT_per_HA)^2)
rmse14<-sqrt(rss14/nrow(test_set))
rmse14
podaci<-read.csv("agriculture.csv", stringsAsFactors = FALSE)
podaci
str(podaci)
#iz bovog data seta izbacujem nenumericke varijable
noviPodaci<-podaci
noviPodaci$Country<-NULL
noviPodaci$Region<-NULL
noviPodaci$Adaptation_Strategies<-NULL
noviPodaci$Crop_Type<-NULL
noviPodaci$Extreme_Weather_Events<-NULL
str(noviPodaci)
summary(noviPodaci$Year)
table(noviPodaci$Year)
#najstarija godina za koju imamo podatke je 1990, a najnovija 2024, tako da cu porediti modele za ove dve godine
#_________________________________________________________________________________________________________________
#Linearni model 2024
podaci24<- subset(noviPodaci, Year==2024)
str(podaci24)
podaci24$Year<-NULL
apply(podaci24,2, function(x) sum(is.na(x)))
#nema nedostajucih vrednosti
library(corrplot)
matrica24<-cor(podaci24)
corrplot(matrica24, method = "number", type = "upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci24$Soil_Health_Index<-NULL
podaci24$Irrigation_Access_.<-NULL
library(caret)
set.seed(1010)
index<-createDataPartition(podaci24$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
trening<-podaci24[index,]
test<-podaci24[-index,]
lm24<-lm(Crop_Yield_MT_per_HA~., data = trening)
summary(lm24)
#Medijana reziduala je -0.1194
#najmanja vrednost je -1.0143, a najveca 2.1528
#Statisticki znacajne varijable koje uticu na prinos su Economic_Impact_Million_USD(***) i Average_Temperature_C(*)
#Podeseni koeficijent determinacije je 0.5668, sto znaci da je 56.68% varijabiliteta zavisne varijable objasnjeno nezavisnim
library(car)
vif(lm24)
#Vrednosti multikolinearnosti za sve varijable su manji od 1.1 pa ih necu izbacivati
lm24.predict<-predict(lm24, test)
rss24<-sum((lm24.predict-test$Crop_Yield_MT_per_HA)^2)
rmse24<-sqrt(rss24/nrow(test))
rmse24
#koren srednje kvadratne greske
#vrednost 0.7684615 je ocekivana greska modela
rmse24/mean(test$Crop_Yield_MT_per_HA)
podaci14<-subset(noviPodaci, Year==2014)
str(podaci14)
podaci14$Year<-NULL
apply(podaci14,2, function(x) sum(is.na(x)))
#nema NA vrednosti
matrica14<-cor(podaci14)
corrplot(matrica14, method = "number", type="upper", diag = FALSE)
#najveci stepen korelacije je sa varijablom Economic_Impact_Million_USD
#izbacujem varijable Soil_Health_Index i Irrigation_Access_.
podaci14$Soil_Health_Index<-NULL
podaci14$Irrigation_Access_.<-NULL
library(caret)
ind<-createDataPartition(podaci14$Crop_Yield_MT_per_HA, p=0.8, list = FALSE)
train_set<-podaci14[ind,]
test_set<-podaci14[-ind,]
lm14<-lm(Crop_Yield_MT_per_HA~., train_set)
summary(lm14)
vif(lm14)
lm14.predict<-predict(lm14, test_set)
rss14<-sum((lm14.predict-test_set$Crop_Yield_MT_per_HA)^2)
rmse14<-sqrt(rss14/nrow(test_set))
rmse14
#koren srednje kvadratne greske
#vrednost 0.684991 je ocekivana greska modela
rmse14/mean(test_set$Crop_Yield_MT_per_HA)
plot(lm14)
lm14<-lm(Crop_Yield_MT_per_HA~., train_set)
summary(lm14)
lm24<-lm(Crop_Yield_MT_per_HA~., data = trening)
summary(lm24)
